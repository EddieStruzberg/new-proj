  
--------------------------------------------------------------------------------
MVC Steps:
--------------------------------------------------------------------------------
1-  Create MyApp.js

		(function () {
		var app = angular.module('MyApp', ['ngRoute'])

		app.config(function ($routeProvider) {
			$routeProvider
			   .when("/Home", {
				   templateUrl: "home/Index.chtml",
				   controller: "HomeController"
			   })
			  .when("/Page2", {
				  templateUrl: "home/Page2.chtml",
				  controller: "Page2Controller"
			  })
			 .when("/Page3", {
				 templateUrl: "home/Page3.chtml",
				 controller: "Page3Controller"
			 })
		});
		//--------------------------------------------------------------------------------
		app.controller("HomeController", function ($scope) {
			$scope.Message = "Angular works!";
		});
		//--------------------------------------------------------------------------------
		app.controller("Page2Controller", function ($scope, $rootScope, $http) {
			$scope.title = "Controller 2"

			$scope.checkboxModel = {
				value1: true,
				value2: 'YES'
			};

			$http({
				method: "GET",
				url: '/Data/GetNames'
			}).then(function (response) {
				$scope.Names = response.data
			})

			$scope.SetData = function () {
				sessionStorage.setItem("Username", $scope.sampledata);
				sessionStorage.setItem("FromDate", $scope.FromDate);
				sessionStorage.setItem("ToDate", $scope.ToDate);
				sessionStorage.setItem("checkboxSelect", $scope.checkboxModel.value1);
			}
		});
		//--------------------------------------------------------------------------------
		app.controller("Page3Controller", function ($scope, $http) {
			$scope.title = "Controller 3"

			$http({
				method: "GET",
				url: '/Data/GetLastContact',
				params: {
					Data: sessionStorage.getItem("Username"),
					FromDate: new Date( sessionStorage.getItem("FromDate")),
					ToDate: new Date(sessionStorage.getItem("ToDate")),
					Gender: sessionStorage.getItem("checkboxSelect")
				}
			}).then(function (response) {
				$scope.ReceivedData = response.data
				})

			});

		})();
-------------------------------------------------------------------------------	
2-Add To Content folder: Styles.css:
	
	    ul { list-style-type: none;margin: 0;padding: 0; overflow: hidden;background-color: #333;}
        li {float: left;}
        li a { display: block;color: white; text-align: center;padding: 14px 16px;text-decoration: none;}
        li a:hover { background-color: #111;}
		
-------------------------------------------------------------------------------	
3-Edit Views/Shared/Layout.cshtml:
		<!DOCTYPE html>
		<html>
		<head>
			<meta charset="utf-8" />
			<meta name="viewport" content="width=device-width, initial-scale=1.0">
			<script src="https://code.angularjs.org/1.7.8/angular.js"></script>
			<script src="https://code.angularjs.org/1.7.8/angular-route.js"></script>
			<script src="https://code.angularjs.org/1.7.8/angular.min.js"></script>
			<script src="https://code.angularjs.org/1.7.8/angular-route.min.js"></script>
			@Styles.Render("~/Content/css")
			@Scripts.Render("~/bundles/modernizr")
			<link href="~/Content/Styles.css" rel="stylesheet" />
		</head>
		<body ng-app="MyApp">

			<div class="container body-content">
				<ul>
					<li><a href="~/Home/index">Home</a></li>
					<li><a href="~/Home/PAGE2">PAGE2</a></li>
					<li><a href="~/Home/PAGE3">PAGE3</a></li>
				</ul>
				@RenderBody()
				<footer></footer>
			</div>

			@Scripts.Render("~/bundles/jquery")
			<script src="~/Scripts/MyApp.js"></script>
			@Scripts.Render("~/bundles/bootstrap")
			@RenderSection("scripts", required: false)
		</body>
		</html>

-------------------------------------------------------------------------------	
4- Edit Index.chtml:  
		@{ViewBag.Title = "Home Page";}
		<div class="row">
			<div ng-controller="HomeController"> {{Message}} </div>
		</div>
-------------------------------------------------------------------------------
5- add empty DataController:

    public class DataController : Controller
    {
        public JsonResult GetLastContact(string Data, DateTime FromDate, DateTime ToDate, bool Gender)
        {
            //var Res = DAL.DAL.DBStoredProceedureRun("GetOrders", "AppDB", "tablename", "compotitionaaa", FromDate, ToDate,true,true);
            List<Contact> Res = new List<Contact>();
            Res.Add(new Contact());
            Res.Add(new Contact());
            return new JsonResult { Data = Res, JsonRequestBehavior = JsonRequestBehavior.AllowGet };
        }

        public JsonResult GetNames()
        {
            // var Res = DAL.DAL.DBStoredProceedureRun("GetNames", "AppDB");

            List<Contact> Res = new List<Contact>();
            Res.Add(new Contact());
            Res.Add(new Contact());
         
            return new JsonResult { Data = Res, JsonRequestBehavior = JsonRequestBehavior.AllowGet };
        }
        public class Contact
        {
            public string ContactId = "123123", FullName = "Eddie", LastName = "Struz", ContactNo1 = "123123", ContactNo2 = "123123", EmailID = "eddie@gmail.com", Address = "agefen24";
        }
    }
-------------------------------------------------------------------------------		
6-Add to HomeController:
     public ActionResult Page2()
     {
        return View();
     }
	 public ActionResult Page3()
     {
        return View();
     }
-------------------------------------------------------------------------------	
7-Add view to Page2 in HomeController:

	@{
    ViewBag.Title = "Page2";
	}
	<h2>Page2</h2>
	<br />
	<hr />
	<div ng-controller="Page2Controller">
		{{title}}
		<hr />
		<span>{{sampledata}}</span>
		<input ng-model="sampledata" />
		<input type="date" ng-model="FromDate" />
		<input type="date" ng-model="ToDate" />
		<br />
		<label>  Value1: <input type="checkbox" ng-model="checkboxModel.value1"> </label>
		<br />
		<label> Value2:  <input type="checkbox" ng-model="checkboxModel.value2" ng-true-value="'YES'" ng-false-value="'NO'"> </label>
		<br />
		<tt>value1 = {{checkboxModel.value1}}</tt>
		<tt>value2 = {{checkboxModel.value2}}</tt>
		<br />
		<select ng-model="selectedName" ng-options="x.FullName for x in Names">Select Names</select>
		<br />
		<button> <a href="Page3" ng-click="SetData()">Send Name to Page3</a> </button>
	</div>
-------------------------------------------------------------------------------
8-Add view to Page3 in HomeController:
		@{
			ViewBag.Title = "Page3";
		}
		<h2>Page3</h2>
		<div ng-controller="Page3Controller">
			<table>
				<tr>
					<th>Full Name</th>
					<th>PhoneNumber</th>
					<th>NumOfOrders</th>
				</tr>
				<tr ng-repeat="item in ReceivedData">
					<td>{{item.FullName}}</td>
				</tr>

			</table>
			<button> <a href="Page2">Back to Page2</a></button>
		</div>
-------------------------------------------------------------------------------
9- Add new projects to sln BLL and DAL change classes names, add references
-------------------------------------------------------------------------------
10- Add Generic DAL Class
		
		using System;
		using System.Collections.Generic;
		using System.Data;
		using System.Data.SqlClient;
		using System.Linq;
		using System.Text;
		using System.Threading.Tasks;

		namespace DAL
		{
			public class DAL
			{
				public static List<Dictionary<string, dynamic>> DBStoredProceedureRun(string SPName, string DBName,  params object[] args)
				{
					var resultList = new List<Dictionary<string, dynamic>>();
					//List<DALResults> Results = new List<DALResults>();

					string server = @"EDDIES-PC\SQLEXPRESS";
					//string username = "eddie";
					//string password = "aaa";
					//string connectionString = // add db name if need @"Trusted_Connection=True; Server=" + server + "; Data Source=localhost; Initial Catalog=NLHospital; Integrated Security=false;user id=" + username + ";password=" + password;
					string connectionString = @"Trusted_Connection=True;Server=" + server + "; DataBase = " + DBName;
					//var sql = "INSERT INTO[FootballStats].[dbo].[MatchesStats]  (Matchdate,PassPercentFlow, PassTotalFlow )  Values(@aaa,@bbb,@ccc,)";
					//var sql2 = "SELECT count(a.[Email]) as orderscount FROM[AppDB].[dbo].[User] a left join[AppDB].[dbo].[orders] b on a.Email = b.Email group by a.[Email] ";

					using (SqlConnection connection = new SqlConnection(connectionString))
					{
						connection.Open();

						SqlCommand cmd = new SqlCommand(SPName, connection);
						cmd.CommandType = CommandType.StoredProcedure;
						cmd.CommandTimeout = 60;

						SqlCommandBuilder.DeriveParameters(cmd);
						for (int i = 0; i < args.Length; i++)
							cmd.Parameters[i+1].Value = args[i];  

						var reader = cmd.ExecuteReader();

						var columnNames = Enumerable.Range(0, reader.FieldCount).Select(reader.GetName).ToList();
			   
						while (reader.Read())
						{
							var result = new Dictionary<string, dynamic>();
							foreach (var colName in columnNames)
								result[colName] = reader[colName];
							resultList.Add(result);

							//DALResults Result = new DALResults(reader["FullName"].ToString(), reader["PhoneNumber"].ToString(), reader["NumOfOrders"].ToString());
							//Results.Add(Result);
						}

						connection.Close();
					}
					return resultList;
				}
			}
			//public class DALResults
			//{
			//    public string FullName { get; set; }
			//    public string PhoneNumber { get; set; }
			//    public string NumOfOrders { get; set; }

			//    public DALResults(string fullName, string phone, string numorders)
			//    {
			//        FullName = fullName;
			//        PhoneNumber = phone;
			//        NumOfOrders = numorders;
			//    }
			//}
		}
-------------------------------------------------------------------------------
Step 11: In DAL: Change Connection string, SP name and DB name
-------------------------------------------------------------------------------
Step 12: add SP to SQL and use it, example:
		USE AppDB
		GO
		create PROCEDURE GetOrders (
			@TeamsTableName varchar(50), 
			@compotition varchar(50),
				@FromDate datetime,
				@ToDAte datetime,
				@IsBoth bit,
				@MaleOrFemale bit
		)
		AS
		BEGIN
			  SELECT FullName,PhoneNumber , count(O.order_by_User) as NumOfOrders
			  FROM [AppDB].[dbo].[User]
			  join Orders O on UserId = O.order_by_User
			  where OrderDate > @FromDate and  OrderDate < @ToDAte
			  and (IsMale = @MaleOrFemale and @IsBoth = 0 or @IsBoth = 1)
			  group by [FullName],PhoneNumber
		END
		
-------------------------------------------------------------------------------
WebApi Steps:
----------------------------------------
1-start new empty and create folders: "Templates" "Scripts"
2-create 3 js files to scripts download from angular and script from hub 
	dont forget the "otherwise" to redirects
3-add home.html to Templates, add index.html to main path
4-add text to index and home(home should be empty)
5-add webservice.asmx 
6-run

------------------------------------------------------------------------------------
EVENTS
------------------------------------------------------------------------------------
app.controller("Page2Controller", function ($scope, $http, $rootScope, demoService) {
    $scope.title = "Controller 2"

    $rootScope.$on("dumyevent", function () {
        var t = demoService.GetData();

        $http({
            method: "GET",
            url: '/Data/GetLastContact',
            params: { packageid: t }
        }).then(function (response) {
            $scope.ReceivedData = response.data
        })
    });

});

app.controller("Page4Controller", function ($scope, demoService) {
    $scope.title = "Controller 4"

    $scope.SendData = function () {
        sessionStorage.setItem("Username", $scope.sampledata);
        var d = $scope.sampledata;
        demoService.SetData(d);
    }
});

app.service("demoService", function ($rootScope) {
    this.TempData = "";

    this.SetData = function (d) {
        this.TempData = d;
        $rootScope.$emit("dumyevent")
    }
    this.GetData = function () {
        return this.TempData;
    }
})


------------------------------------------------------------------
        public ActionResult Page2(string Name)
        {
            if (Name.Equals("aaa"))
                return View("~/Views/Home/Page2.cshtml");
            else
                return this.Page3();
        }
	on index:
	<form action="Page2" method="post">
		<input type="text" name="Name" />
		<input type="submit" value="go" />
    	</form>
-------------------------------------------------------------------
DAL:

1- CREATE SP In DB:

	USE AppDB
	GO

	CREATE PROCEDURE GetOrders (
		@TeamsTableName varchar(50), 
		@compotition varchar(50),
		@FromDate datetime,
		@ToDAte datetime
	)
	AS
	BEGIN

		  SELECT FullName,PhoneNumber , count(O.order_by_User) as NumOfOrders
		  FROM [AppDB].[dbo].[User]
		  join Orders O on UserId = O.order_by_User
		  where OrderDate > @FromDate and  OrderDate < @ToDAte
		  group by [FullName],PhoneNumber

	END
	
2- Add sp name to DAL
